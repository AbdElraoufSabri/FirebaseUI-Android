import kotlin.String

/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {
  val vvalidator: String = "com.afollestad:vvalidator:" + Versions.vvalidator

  /**
   * http://developer.android.com/tools/extras/support-materialProgress.html
   */
  const val annotation: String = "androidx.annotation:annotation:" + Versions.annotation

  /**
   * https://developer.android.com/jetpack/androidx
   */
  const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

  /**
   * http://developer.android.com/tools/extras/support-materialProgress.html
   */
  const val browser: String = "androidx.browser:browser:" + Versions.browser

  /**
   * http://developer.android.com/tools/extras/support-materialProgress.html
   */
  const val cardview: String = "androidx.cardview:cardview:" + Versions.cardview

  /**
   * http://tools.android.com
   */
  const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
      Versions.constraintlayout

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val lifecycle_compiler: String = "androidx.lifecycle:lifecycle-compiler:" +
      Versions.androidx_lifecycle

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
      Versions.androidx_lifecycle

  const val multidex_instrumentation: String = "androidx.multidex:multidex-instrumentation:" +
      Versions.multidex_instrumentation

  const val multidex: String = "androidx.multidex:multidex:" + Versions.multidex

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val paging_runtime: String = "androidx.paging:paging-runtime:" + Versions.paging_runtime

  /**
   * http://developer.android.com/tools/extras/support-materialProgress.html
   */
  const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

  /**
   * https://developer.android.com/studio
   */
  const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
      Versions.com_android_tools_build_gradle

  /**
   * https://developer.android.com/studio
   */
  const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

  /**
   * https://github.com/facebook/facebook-android-sdk
   */
  const val facebook_login: String = "com.facebook.android:facebook-login:" +
      Versions.facebook_login

  /**
   * https://github.com/bumptech/glide
   */
  const val com_github_bumptech_glide_compiler: String = "com.github.bumptech.glide:compiler:" +
      Versions.com_github_bumptech_glide

  /**
   * https://github.com/bumptech/glide
   */
  const val glide: String = "com.github.bumptech.glide:glide:" + Versions.com_github_bumptech_glide

  const val play_services_auth: String = "com.google.android.gms:play-services-auth:" +
      Versions.play_services_auth

  /**
   * http://developer.android.com/tools/extras/support-materialProgress.html
   */
  const val material: String = "com.google.android.material:material:" + Versions.material

  const val firebase_auth: String = "com.google.firebase:firebase-auth:" + Versions.firebase_auth

  const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

  /**
   * http://github.com/google/truth
   */
  const val truth: String = "com.google.truth:truth:" + Versions.truth

  const val com_gradle_build_scan_gradle_plugin: String =
      "com.gradle.build-scan:com.gradle.build-scan.gradle.plugin:" +
      Versions.com_gradle_build_scan_gradle_plugin

  /**
   * https://github.com/JakeWharton/butterknife/
   */
  const val butterknife_compiler: String = "com.jakewharton:butterknife-compiler:" +
      Versions.com_jakewharton

  /**
   * https://github.com/JakeWharton/butterknife/
   */
  const val butterknife: String = "com.jakewharton:butterknife:" + Versions.com_jakewharton

  /**
   * http://github.com/square/leakcanary/
   */
  const val leakcanary_android_no_op: String = "com.squareup.leakcanary:leakcanary-android-no-op:" +
      Versions.com_squareup_leakcanary

  /**
   * http://github.com/square/leakcanary/
   */
  const val leakcanary_android: String = "com.squareup.leakcanary:leakcanary-android:" +
      Versions.com_squareup_leakcanary

  /**
   * http://github.com/square/leakcanary/
   */
  const val leakcanary_support_fragment: String =
      "com.squareup.leakcanary:leakcanary-support-fragment:" + Versions.com_squareup_leakcanary

  /**
   * https://github.com/square/retrofit/
   */
  const val converter_gson: String = "com.squareup.retrofit2:converter-gson:" +
      Versions.com_squareup_retrofit2

  /**
   * https://github.com/square/retrofit/
   */
  const val retrofit: String = "com.squareup.retrofit2:retrofit:" + Versions.com_squareup_retrofit2

  const val twitter_core: String = "com.twitter.sdk.android:twitter-core:" + Versions.twitter_core

  const val de_fayard_buildsrcversions_gradle_plugin: String =
      "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
      Versions.de_fayard_buildsrcversions_gradle_plugin

  /**
   * http://junit.org
   */
  const val junit: String = "junit:junit:" + Versions.junit

  /**
   * https://github.com/DreaminginCodeZH/MaterialProgressBar
   */
  const val library: String = "me.zhanghai.android.materialprogressbar:library:" + Versions.materialProgress

  const val org_gradle_kotlin_kotlin_dsl_gradle_plugin: String =
      "org.gradle.kotlin.kotlin-dsl:org.gradle.kotlin.kotlin-dsl.gradle.plugin:" +
      Versions.org_gradle_kotlin_kotlin_dsl_gradle_plugin

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
      Versions.kotlin_gradle_plugin

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_reflect: String = "org.jetbrains.kotlin:kotlin-reflect:" +
      Versions.kotlin_reflect

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_sam_with_receiver: String = "org.jetbrains.kotlin:kotlin-sam-with-receiver:" +
      Versions.kotlin_sam_with_receiver

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_scripting_compiler_embeddable: String =
      "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" +
      Versions.kotlin_scripting_compiler_embeddable

  /**
   * https://kotlinlang.org/
   */
  const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
      Versions.kotlin_stdlib_jdk8

  /**
   * https://github.com/mockito/mockito
   */
  const val mockito_android: String = "org.mockito:mockito-android:" + Versions.mockito_android

  /**
   * http://robolectric.org
   */
  const val robolectric: String = "org.robolectric:robolectric:" + Versions.robolectric

  /**
   * https://github.com/googlesamples/easypermissions
   */
  const val easypermissions: String = "pub.devrel:easypermissions:" + Versions.easypermissions
}
